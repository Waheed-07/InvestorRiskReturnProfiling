package com.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuestionsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionsAllPropertiesEquals(Questions expected, Questions actual) {
        assertQuestionsAutoGeneratedPropertiesEquals(expected, actual);
        assertQuestionsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionsAllUpdatablePropertiesEquals(Questions expected, Questions actual) {
        assertQuestionsUpdatableFieldsEquals(expected, actual);
        assertQuestionsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionsAutoGeneratedPropertiesEquals(Questions expected, Questions actual) {
        assertThat(expected)
            .as("Verify Questions auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionsUpdatableFieldsEquals(Questions expected, Questions actual) {
        assertThat(expected)
            .as("Verify Questions relevant properties")
            .satisfies(e -> assertThat(e.getQuestionText()).as("check questionText").isEqualTo(actual.getQuestionText()))
            .satisfies(e -> assertThat(e.getQuestionType()).as("check questionType").isEqualTo(actual.getQuestionType()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuestionsUpdatableRelationshipsEquals(Questions expected, Questions actual) {}
}
