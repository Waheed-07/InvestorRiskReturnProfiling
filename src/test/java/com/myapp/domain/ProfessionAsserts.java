package com.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProfessionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfessionAllPropertiesEquals(Profession expected, Profession actual) {
        assertProfessionAutoGeneratedPropertiesEquals(expected, actual);
        assertProfessionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfessionAllUpdatablePropertiesEquals(Profession expected, Profession actual) {
        assertProfessionUpdatableFieldsEquals(expected, actual);
        assertProfessionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfessionAutoGeneratedPropertiesEquals(Profession expected, Profession actual) {
        assertThat(expected)
            .as("Verify Profession auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfessionUpdatableFieldsEquals(Profession expected, Profession actual) {
        assertThat(expected)
            .as("Verify Profession relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getConceptUri()).as("check conceptUri").isEqualTo(actual.getConceptUri()))
            .satisfies(e -> assertThat(e.getIscoGroup()).as("check iscoGroup").isEqualTo(actual.getIscoGroup()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfessionUpdatableRelationshipsEquals(Profession expected, Profession actual) {}
}
